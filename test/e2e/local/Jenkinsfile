pipeline {
    agent any
    environment {
        DISCORD_SEC = credentials("discord_secret")
    }
    stages {

        stage('Local Managed') {
            steps{
                sh '''
                    #!/bin/bash

                    ksctl create local -n demo1 --approve -v
                    ksctl create local -n demo2 --approve -v

                    ksctl get
                    export KUBECONFIG="/var/lib/jenkins/.ksctl/config/local/demo1/kubeconfig"

                    kubectl get nodes -owide

                    export KUBECONFIG="/var/lib/jenkins/.ksctl/config/local/demo2/kubeconfig"

                    kubectl get nodes -owide
                '''
            }
        }

        stage('Test Switching') {
            steps {
                sh '''
                    #!/bin/bash
                    ksctl switch -p local -n demo1
                    ksctl switch -p local -n demo2
                '''
            }
        }
    }

    post {
        always {
            sh '''
                #!/bin/bash
                ksctl delete local -n demo1 --approve -v || exit 0
                ksctl delete local -n demo2 --approve -v || exit 0
            '''
        }
        success {
            discordSend description: 'e2e test of local provider (success)', footer: '', image: '', link: "${env.BUILD_URL}", result: "${currentBuild.currentResult}", scmWebUrl: '', thumbnail: '', title: 'Jenkins local', webhookURL: "${DISCORD_SEC}"
        }
        failure {
            discordSend description: 'e2e test of local provider (failure)', footer: '', image: '', link: "${env.BUILD_URL}", result: "${currentBuild.currentResult}", scmWebUrl: '', thumbnail: '', title: 'Jenkins local', webhookURL: "${DISCORD_SEC}"
        }
    }
}
