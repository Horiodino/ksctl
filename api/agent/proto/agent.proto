syntax = "proto3";

package ksctlAgent;

option go_package = "./pb";

enum ScaleOperation {
  UP = 0;
  DOWN = 1;
}

enum ApplicationOperation {
  CREATE = 0;
  DELETE = 1;
  UPDATE = 2;
}

service KsctlAgent {
  rpc Scale(ReqScale) returns (ResScale);
  rpc LoadBalancer(ReqLB) returns (ResLB);
  rpc Application(ReqApplication) returns (ResApplication);
}


// TODO: ReqScale we need to think of were should the ksctl agent gets its data about the cluster?
//  from
//   1. inside this will read from a configmap
//   2. get from the caller aka grpc client
message ReqScale {
  ScaleOperation operation = 1;
  uint32 scaleTo = 2;
}

message ResScale {
  uint32 updatedWP = 1;
}


message ReqApplication {
  ApplicationOperation operation = 1;
  string appName = 2;
}

message ResApplication {}


message PortMappings {
  uint64 from = 1;
  uint64 to = 2;
  uint64 protocol = 3;
}

message ReqLB {
  // private Ip of controlplanes
  // nodePorts and corresponding port for Loadbalancer svc
  // Protocol
  repeated string privateIPs = 1;
  repeated PortMappings ports = 2;
  // need network, region and apikeys
}

message ResLB {
  string loadBalancerPublicIP = 1;
  string createdResourceId = 2;
}
